{
  "swagger": "2.0",
  "info": {
    "version": "2020-07-01-preview",
    "title": "servicelinker",
    "description": "Service Linker is the service to manage Azure service to service connections"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceLinker/links": {
      "get": {
        "tags": [
          "Links"
        ],
        "x-ms-examples": {
          "Link": {
            "$ref": "./examples/LinkListBySubscription.json"
          }
        },
        "operationId": "Links_ListBySubscription",
        "description": "Lists all the links for a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- returns a list of links.",
            "schema": {
              "$ref": "#/definitions/LinkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/links": {
      "get": {
        "tags": [
          "Links"
        ],
        "x-ms-examples": {
          "Link": {
            "$ref": "./examples/LinkListByResourceGroup.json"
          }
        },
        "operationId": "Links_ListByResourceGroup",
        "description": "Lists all the links for a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- returns a list of links.",
            "schema": {
              "$ref": "#/definitions/LinkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/links/{linkName}": {
      "get": {
        "tags": [
          "Links"
        ],
        "x-ms-examples": {
          "Link": {
            "$ref": "./examples/Link.json"
          }
        },
        "operationId": "Links_Get",
        "description": "Gets a link by its ID.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LinkNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Link"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "description": "Create or update a link.",
        "x-ms-examples": {
          "PutLink": {
            "$ref": "./examples/PutLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LinkNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Link"
            },
            "description": "The request body supplied to the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The response describes a ServiceLinker link.",
            "schema": {
              "$ref": "#/definitions/Link"
            }
          },
          "201": {
            "description": "Created. The response describes the new link and contains a Location header to query the operation result.",
            "schema": {
              "$ref": "#/definitions/Link"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the existing ServiceLinker link is now updating and contains a Location header to query the operation result."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_Delete",
        "description": "Delete a link.",
        "x-ms-examples": {
          "DeleteLink": {
            "$ref": "./examples/DeleteLink.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LinkNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The link is deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the link is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_Update",
        "description": "Operation to update an existing link.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LinkNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Link"
            },
            "description": "The request body supplied to the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a link.",
            "schema": {
              "$ref": "#/definitions/Link"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the existing link is now updating and contains a Location header to query the operation result."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "UpdateLink": {
            "$ref": "./examples/UpdateLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/links/{linkName}/validateConnectivity": {
      "post": {
        "tags": [
          "Links"
        ],
        "operationId": "Links_ValidateConnectivity",
        "description": "Validate a link.",
        "x-ms-examples": {
          "ValidateLinkSuccess": {
            "$ref": "./examples/ValidateLinkSuccess.json"
          },
          "ValidateLinkFailure": {
            "$ref": "./examples/ValidateLinkFailure.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LinkNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ValidateLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceLinker/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists the available ServiceLinker REST API operations.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/servicelinker/"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "The resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        }
      },
      "x-ms-azure-resource": true
    },
    "Link": {
      "description": "A link.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of the link.",
          "$ref": "#/definitions/LinkProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      }
    },
    "LinkProperties": {
      "description": "The properties of the link.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "sourceId": {
          "description": "The resource Id of source service.",
          "type": "string"
        },
        "targetId": {
          "description": "The resource Id of target service.",
          "type": "string"
        },
        "authInfo": {
          "description": "The authentication information.",
          "$ref": "#/definitions/AuthInfo"
        },
        "additionalInfo": {
          "description": "The additional info for the link.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalInfo"
          }
        },
        "sourceConfigurations": {
          "description": "The configuration properties for source resource.",
          "type": "array",
          "items": {
            "description": "A setting.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of setting.",
                "type": "string"
              },
              "linkConfig": {
                "description": "The configuration of the link.",
                "type": "object"
              }
            }
          }
        }
      }
    },
    "AuthType": {
      "description": "The authentication type.",
      "type": "string",
      "enum": [
        "systemAssignedIdentity",
        "userAssignedIdentity",
        "servicePrincipal",
        "secret",
        "certificate"
      ]
    },
    "AuthInfo": {
      "description": "The authentication info.",
      "type": "object",
      "properties": {
        "authType": {
          "description": "The authentication type.",
          "$ref": "#/definitions/AuthType"
        },
        "identity": {
          "description": "The identity info for the link.",
          "type": "string"
        },
        "secret": {
          "description": "The secret info for the link.",
          "type": "string",
          "x-ms-secret": true
        },
        "permissions": {
          "description": "The permissions info for the link.",
          "type": "array",
          "items": {
            "description": "A single permission info.",
            "type": "string"
          }
        }
      }
    },
    "ProvisioningState": {
      "description": "Provisioning state of the resource.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting",
        "Moving"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "AdditionalInfo": {
      "description": "The additional information required for creating a link.",
      "type": "object",
      "properties": {
        "bindingType": {
          "type": "string",
          "description": "The binding type."
        }
      }
    },
    "LinkListResult": {
      "description": "Object that includes an array of ServiceLinker links and a possible link for the next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).",
          "type": "string"
        }
      }
    },
    "ValidateLink": {
      "description": "The validation result for a link.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The link name.",
          "type": "string"
        },
        "linkStatus": {
          "description": "Specifies if the link is healthy.",
          "type": "string",
          "enum": [
            "Healthy",
            "Not healthy"
          ],
          "x-ms-enum": {
            "name": "linkStatus",
            "modelAsString": true
          }
        },
        "reason": {
          "description": "The reason of the error.",
          "type": "string"
        },
        "reportStartTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the validation report."
        },
        "reportEndTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the validation report."
        },
        "sourceId": {
          "description": "The resource Id of source service.",
          "type": "string"
        },
        "targetId": {
          "description": "The resource Id of target service.",
          "type": "string"
        },
        "authType": {
          "description": "The authentication type.",
          "$ref": "#/definitions/AuthType"
        }
      }
    },
    "Operation": {
      "description": "A ServiceLinker REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.ServiceLinker.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type such as read, write and delete.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      }
    },
    "OperationListResult": {
      "description": "The list of servicelinker operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "The list of servicelinker operations supported by the Microsoft.ServiceLinker resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "LinkNameParameter": {
      "name": "linkName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID that uniquely identifies a link.",
      "x-ms-parameter-location": "method"
    }
  }
}
